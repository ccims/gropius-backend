fragment LabelDataExtensive on Label {
    ...LabelData
    color
    description
    updatedAt
}
fragment ReferencedSubject on ReferencedSubject {
    ...on Issue {
        ...IssueData
    }
}
fragment IssueCommentData on IssueComment {
    id
    createdAt
    author {
        ...UserData
    }
    body
    lastEditedAt
    updatedAt
    editor {
        ...UserData
    }
}
fragment TimelineItemData on IssueTimelineItems {
    ...on Node {
        id
    }
    ...on AddedToProjectEvent {
        id
        createdAt
    }
    ...on AssignedEvent {
        id
        createdAt
        actor {
            ...UserData
        }
        assignee {
            ...UserData
        }
    }
    ...on ClosedEvent {
        id
        createdAt
        actor {
            ...UserData
        }
    }
    ...on CommentDeletedEvent {
        id
        createdAt
        actor {
            ...UserData
        }
    }
    ...on ConnectedEvent {
        id
        createdAt
    }
    ...on ConvertedNoteToIssueEvent {
        id
        createdAt
    }
    ...on ConvertedToDiscussionEvent {
        id
        createdAt
    }
    ...on CrossReferencedEvent {
        id
        createdAt
    }
    ...on DemilestonedEvent {
        id
        createdAt
        actor {
            ...UserData
        }
        milestoneTitle
    }
    ...on DisconnectedEvent {
        id
        createdAt
    }
    ...on IssueComment {
        id
        ...IssueCommentData
    }
    ...on LabeledEvent {
        id
        createdAt
        actor {
            ...UserData
        }
        label {
            ...LabelData
        }
    }
    ...on LockedEvent {
        id
        createdAt
    }
    ...on MarkedAsDuplicateEvent {
        id
        createdAt
        actor {
            ...UserData
        }
        isCrossRepository
        canonical {
            ...on Issue {
                ...IssueData
            }
        }
        duplicate {
            ...on Issue {
                ...IssueData
            }
        }
    }
    ...on MentionedEvent {
        id
        createdAt
        actor {
            ...UserData
        }
    }
    ...on MilestonedEvent {
        id
        createdAt
        actor {
            ...UserData
        }
        milestoneTitle
    }
    ...on MovedColumnsInProjectEvent {
        id
        createdAt
    }
    ...on PinnedEvent {
        id
        createdAt
        actor {
            ...UserData
        }
    }
    ...on ReferencedEvent {
        id
        createdAt
    }
    ...on RemovedFromProjectEvent {
        id
        createdAt
    }
    ...on RenamedTitleEvent {
        id
        createdAt
        actor {
            ...UserData
        }
        currentTitle
        previousTitle
    }
    ...on ReopenedEvent {
        id
        createdAt
        actor {
            ...UserData
        }
    }
    ...on TransferredEvent {
        id
        createdAt
    }
    ...on UnassignedEvent {
        id
        createdAt
        actor {
            ...UserData
        }
        assignee {
            ...UserData
        }
    }
    ...on UnlabeledEvent {
        id
        createdAt
        actor {
            ...UserData
        }
        label {
            ...LabelData
        }
    }
    ...on UnlockedEvent {
        id
        createdAt
    }
    ...on UnmarkedAsDuplicateEvent {
        id
        createdAt
        actor {
            ...UserData
        }
        isCrossRepository
        canonical {
            ...on Issue {
                ...IssueData
            }
        }
        duplicate {
            ...on Issue {
                ...IssueData
            }
        }
    }
    ...on UnpinnedEvent {
        id
        createdAt
        actor {
            ...UserData
        }
    }
    ...on SubscribedEvent {
        id
        createdAt
    }
    ...on UnsubscribedEvent {
        id
        createdAt
    }
}
query TimelineRead($issue: ID!, $since: DateTime, $issueCount: Int!,$cursor:String) {
    ...MetaData
    node(id: $issue) {
        ...on Issue {
            timelineItems(since: $since,after: $cursor,first: $issueCount) {
                nodes {
                    ...on Node {
                        id
                    }
                    ...TimelineItemData
                }
                totalCount
                pageInfo {
                    ...PageInfoData
                }
            }
        }
    }
}